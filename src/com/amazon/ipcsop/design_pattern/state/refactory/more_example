http://blog.csdn.net/prince2270/article/details/4540485

【用State替换状态改变条件语句】
      适用范围：控制一个对象状态转换的条件表达式过于复杂。
      解决方法：用处理特殊状态和状态转换的State类替换条件语句。
      动机：重构实现State模式的主要原因：是为了对付过度复杂的状态改变条件逻辑，这种逻辑往往会散步在整个类中，控制对象的状态以及状态之间的转换。
      在State模式中，需要创建代表对象特殊状态和状态间转换的类。包含状态改变的对象称为上下文。上下文把状态相关的行为委托到状态对象上。
      通过上下文引用不同的状态对象，状态对象可以在运行时实现状态转换。
      把状态改变条件逻辑从类中去除，并搬移到表示不同状态的一系列类中，可以产生更简单的设计，它提供了观察状态转换的更好的鸟瞰图。
      另一方面，如果类中的状态转换逻辑很容易理解，就不需要重构到State模式了。

现在，看一下本重构的优缺点：
      优点：
减少或去除状态改变条件逻辑
简化了复杂的状态改变逻辑
提供了观察状态改变的很好的鸟瞰图
      缺点：
当状态转换逻辑已经易于理解的时候，会增加设计的复杂度