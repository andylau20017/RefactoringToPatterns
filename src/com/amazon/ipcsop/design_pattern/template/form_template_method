意图：子类中的两个方法以相同的顺序执行相似的步骤，
但是步骤并不完全相同。通过把这些步骤提取成具有相同签名的方法来泛化这两个方法，然后上移这些泛化方法，形成Template Method。
 
动机：Template Method“一次性实现了一个算法的不变部分，并将可变的行为留给子类来实现”。
当不变的和可变的行为在方法的子类实现中混合在一起的时候，
不变的行为就会在子类中重复出现。通过把这些行为搬移到单一的地方，
重构到Template Method可以帮助子类摆脱重复的不变的行为纠缠：超类中的方法中的泛化算法。
 
优点和缺点：
＋通过把不变行为搬移到超类，去除子类中的重复代码。
＋简化并有效的表达了一个通用算法的步骤。
＋允许子类很容易地定制一个算法。
－当为了生成算法，子类必须实现很多方法的时候，会增加设计的复杂度。
 
做法：
1、在一个类层次结构中，找到一个相似的方法。在相似的方法上应用组合方法重构，提取出同一方法。
2、应用上移方法重构，把同一方法上移到超类中。
3、为了为相似方法的每个版本产生相同的方法体，在每个唯一方法上应用重命名方法重构，直到每个子类中额相似方法相同为止。
4、如果相似方法在每个子类中还没有一个相同的签名，应用重命名方法重构产生这个签名。
5、在相似方法上应用上移方法重构，在超类中为每个唯一方法定义抽象方法。